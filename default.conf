server {
    listen       80;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    access_by_lua_block {

        -- set the rate limit threshold
        local limit = 5

        -- set the number of seconds to keep the rate limit (default: 60 seconds)
        local time_window = 60

        -- assign variable from the nginx.conf
        local my_ratelimit = ngx.shared.my_ratelimit

        -- get the client IP address # becareful if behind a proxy
        local ip = ngx.var.remote_addr
    
        -- get the requested endpoint path
        local path = ngx.var.uri
    
        -- set the key for the ratelimit table
        local key = ip .. ":" .. path
    
        -- get the current number of requests for the key
        local current = tonumber(my_ratelimit:get(key) or 0)
    
        if current == 0 then
            -- set the initial value for the key in the ratelimit table
            my_ratelimit:set(key, 1)

                -- set the expiration time for the key in the ratelimit table
            my_ratelimit:expire(key, time_window)
        else
            -- if value > 0, then increment the number of requests
            my_ratelimit:incr(key, 1)
        end

        -- debug
        -- show logs
        -- ngx.log(ngx.ERR, "----- Client: " .. tostring(ip) .. " Path: " .. tostring(path) .. " Key: " .. tostring(key) .. " RESULT: " .. tostring(my_ratelimit:get(key)))

        -- check if the number of requests has exceeded the limit
        if current >= limit then
            -- return an error status and a message
            return ngx.exit(ngx.HTTP_FORBIDDEN, "Rate limit exceeded for IP " .. ip .. " and endpoint " .. path)
        end
    } 

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }


}