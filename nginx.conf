user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    include /etc/nginx/conf.d/*.conf;

    # initialize my_ratelimit for rule in default.conf
    lua_shared_dict my_ratelimit 10m;

    init_by_lua_block {
        -- ratelimit by ip and path
        function set_ratelimit_by_ip_and_path(ip, path, limit, period, lua_dict)
            local key = ip .. path
            local rate, err = lua_dict:get(key)
            if rate then
                if rate > limit then
                    ngx.exit(ngx.HTTP_TOO_MANY_REQUESTS)
                else
                    lua_dict:incr(key, 1)
                end
            else
                lua_dict:set(key, 1, period)
            end
        end
    }
}